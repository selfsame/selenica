{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "src/selenica/core.cljs",
			"settings":
			{
				"buffer_size": 3771,
				"line_ending": "Windows"
			}
		},
		{
			"file": "project.clj",
			"settings":
			{
				"buffer_size": 2732,
				"line_ending": "Windows"
			}
		},
		{
			"file": "resources/public/css/style.css",
			"settings":
			{
				"buffer_size": 693,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/selenica/macros.clj",
			"settings":
			{
				"buffer_size": 6917,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Figwheel: Starting server at http://localhost:3449\nFocusing on build ids: dev\nCompiling \"resources/public/js/compiled/selenica.js\" from [\"src\"]...\nSuccessfully compiled \"resources/public/js/compiled/selenica.js\" in 0.31 seconds.\nStarted Figwheel autobuilder\n\nLaunching ClojureScript REPL for build: dev\nFigwheel Controls:\n          (stop-autobuild)                ;; stops Figwheel autobuilder\n          (start-autobuild [id ...])      ;; starts autobuilder focused on optional ids\n          (switch-to-build id ...)        ;; switches autobuilder to different build\n          (reset-autobuild)               ;; stops, cleans, and starts autobuilder\n          (reload-config)                 ;; reloads build config and resets autobuild\n          (build-once [id ...])           ;; builds source one time\n          (clean-builds [id ..])          ;; deletes compiled cljs target files\n          (fig-status)                    ;; displays current state of system\n          (add-dep [org.om/om \"0.8.1\"]) ;; add a dependency. very experimental\n  Switch REPL build focus:\n          :cljs/quit                      ;; allows you to switch REPL to another build\n    Docs: (doc function-name-here)\n    Exit: Control+C or :cljs/quit\n Results: Stored in vars *1, *2, *3, *e holds last exception object\nPrompt will show when figwheel connects to your application\nTo quit, type: :cljs/quit\ncljs.user=> ",
			"settings":
			{
				"buffer_size": 1392,
				"line_ending": "Windows",
				"name": "*REPL* [clojurescript]",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 119.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"syntax: cloj",
				"Set Syntax: ClojureScript"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 133.0,
		"history":
		[
			"text = '(load-string \"' + text.strip().replace('\"', r'\\\"') + '\")'",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)\\",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"hard.input (:import [UnityEngine Input KeyCode Camera Physics Time])\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"(ns hard.input (:import [UnityEngine Input KeyCode Camera Physics Time])\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"(ns hard.input (:import [UnityEngine Input KeyCode Camera Physics Time]))\")",
			"dir(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\"",
			"view.substr(view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3))",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).substr",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).text",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).lines",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).lines()",
			"dir(view)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).begin()",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", namespacedecl.begin() + 3)",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).begin() + 1)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"namespacedecl ",
			"view.scope_name(namespace.begin() + 1)",
			"view.scope_name(namespacedecl.end()-1)",
			"namespacedecl = view.find(r\"^[^;]*?\\(\", 0)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"view.scope_name(namespacedecl.end()-1)",
			"view.scope_name",
			"view",
			"import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/jparker/Desktop/PROJECTS/joe/dev/selenica",
		"/C/Users/jparker/Desktop/PROJECTS/joe/dev/selenica/src",
		"/C/Users/jparker/Desktop/PROJECTS/joe/dev/selenica/src/heh"
	],
	"file_history":
	[
		"/C/Users/jparker/AppData/Roaming/Sublime Text 3/Packages/User/paredit.sublime-settings",
		"/C/Users/jparker/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/jparker/Desktop/PROJECTS/joe/dev/final/src/comp/outliner.cljs",
		"/C/Users/jparker/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/admin/Documents/dev/selenica/project.clj"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/selenica/core.cljs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3771,
						"regions":
						{
						},
						"selection":
						[
							[
								584,
								584
							]
						],
						"settings":
						{
							"syntax": "Packages/SublimeREPL/config/ClojureScript/clojurescript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "project.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2732,
						"regions":
						{
						},
						"selection":
						[
							[
								424,
								424
							]
						],
						"settings":
						{
							"syntax": "Packages/Clojure/Clojure.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "resources/public/css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 693,
						"regions":
						{
						},
						"selection":
						[
							[
								1,
								1
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 14.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/selenica/macros.clj",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6917,
						"regions":
						{
						},
						"selection":
						[
							[
								22,
								22
							]
						],
						"settings":
						{
							"syntax": "Packages/Arcadia/Arcadia.tmlanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1392,
						"regions":
						{
						},
						"selection":
						[
							[
								1392,
								1392
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_indent": true,
							"detect_indentation": true,
							"gutter": false,
							"history_arrows": true,
							"indent_subsequent_lines": true,
							"line_numbers": false,
							"repl": true,
							"repl_external_id": "clojurescript",
							"repl_id": "a726d862ea484c4bbbbefbb845dbecdf",
							"repl_restart_args":
							{
								"cmd":
								{
									"linux":
									[
										"lein",
										"figwheel"
									],
									"osx":
									[
										"lein",
										"figwheel"
									],
									"windows":
									[
										"lein.bat",
										"figwheel"
									]
								},
								"cwd":
								{
									"linux": "$file_path",
									"osx": "$file_path",
									"windows": "$file_path"
								},
								"encoding": "utf8",
								"extend_env":
								{
									"INSIDE_EMACS": "1"
								},
								"external_id": "clojurescript",
								"soft_quit": "\n(. System exit 0)\n",
								"syntax": "Packages/Clojure/Clojure.tmLanguage",
								"type": "subprocess"
							},
							"repl_sublime2": false,
							"smart_indent": false,
							"spell_check": false,
							"syntax": "Packages/Clojure/Clojure.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 315.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.812900274474,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "selenica.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 166.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
